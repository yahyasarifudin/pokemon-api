[{"/var/www/html/poke-api/src/index.js":"1","/var/www/html/poke-api/src/reportWebVitals.js":"2","/var/www/html/poke-api/src/App.js":"3","/var/www/html/poke-api/src/ContextPokemon.js":"4","/var/www/html/poke-api/src/components/PokemonListPage.js":"5","/var/www/html/poke-api/src/components/PokemonDetailPage.js":"6","/var/www/html/poke-api/src/components/MyPokemonPage.js":"7"},{"size":500,"mtime":1608454658543,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608400682128,"results":"10","hashOfConfig":"9"},{"size":1214,"mtime":1608496455744,"results":"11","hashOfConfig":"9"},{"size":389,"mtime":1608494471548,"results":"12","hashOfConfig":"9"},{"size":1787,"mtime":1608504885611,"results":"13","hashOfConfig":"9"},{"size":2644,"mtime":1608494833528,"results":"14","hashOfConfig":"9"},{"size":500,"mtime":1608485041771,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"dhdbyh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/var/www/html/poke-api/src/index.js",[],["33","34"],"/var/www/html/poke-api/src/reportWebVitals.js",[],"/var/www/html/poke-api/src/App.js",["35","36","37"],"import logo from './logo.svg';\nimport './App.css';\nimport PokemonListPage from './components/PokemonListPage';\nimport PokemonDetailPage from './components/PokemonDetailPage';\nimport MyPokemonPage from './components/MyPokemonPage';\nimport { ProviderPokemon } from './ContextPokemon';\nimport { useState } from \"react\";\nimport { ApolloClient, gql, ApolloProvider, InMemoryCache } from '@apollo/client';\n\n\nfunction App() {\n  const client = new ApolloClient({\n    cache: new InMemoryCache(),\n    uri: \"https://graphql-pokeapi.vercel.app/api/graphql\"\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <ProviderPokemon>\n        <p>Pokemon</p>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <PokemonListPage />\n            </div>\n          </div>\n          <table>\n            <tr>\n              <td><p><h4>Detail Pokemon :</h4></p>\n                <PokemonDetailPage />\n              </td>\n              <td>\n                <p><h4>My Pokemon :</h4></p>\n                <MyPokemonPage />\n              </td>\n            </tr>\n          </table>\n        </div>\n      </ProviderPokemon>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/var/www/html/poke-api/src/ContextPokemon.js",[],"/var/www/html/poke-api/src/components/PokemonListPage.js",["38","39","40","41","42"],"/var/www/html/poke-api/src/components/PokemonDetailPage.js",["43","44","45","46"],"import { useQuery, gql } from '@apollo/client';\nimport React, { useContext, useState } from 'react';\nimport ContextPokemon from '../ContextPokemon';\n\nconst PokemonDetailPage = () => {\n \n    const {pokemon} = useContext(ContextPokemon);\n\n    const [detailPokemon, setDetailPokemon] = useState(null);\n\n    const GET_POKEMON = gql`\n    query pokemon($name: String!) {\n      pokemon(name: $name) {\n          id\n          name\n          sprites {\n            back_default\n          }\n          abilities {\n            ability {\n              name\n            }\n          }\n          moves {\n            move {\n              name\n            }\n          }\n          types {\n            type {\n              name\n            }\n          }\n          message\n          status\n        }\n      }\n    `;\n\n    const {loading, error, data} = useQuery(GET_POKEMON, {\n        variables: {\n            name: pokemon\n        },\n        onCompleted: function () {\n          setDetailPokemon(data.pokemon)\n        },\n        skip: !pokemon\n    });\n\n    const loopingFor = (detailPokemon) => {\n        let abilities = detailPokemon?.abilities;\n        let types = detailPokemon?.types;\n   \n         return(\n           <table>\n             <thead>\n               <th>Gambar</th>\n               <th>Ability</th>\n               <th>Type</th>\n               <th>Action</th>\n             </thead>\n             <tbody>\n               <tr>\n                 <td><ShowImg user={detailPokemon?.sprites.back_default}/></td>\n                 <td>\n                   { \n                     abilities?.map((param) => \n                       <Ability key={param} abilities={param.ability.name} />)\n                   }\n                 </td>\n                 <td>\n                   { \n                     types?.map((param) => \n                       <TypePokemon key={param} types={param.type.name} />\n                     )\n                   }\n                   </td>\n                 <td>\n                   <button kind=\"primary\" onClick={() => console.log(\"NickName!\")}>Tangkap</button>\n                 </td>\n               </tr>\n               </tbody>\n             </table>\n         )\n       }\n       return <>{loopingFor(detailPokemon)}</>\n   }\n   \n   function Ability(props){\n     return(\n       <li>{props.abilities}</li>\n     )\n   }\n   \n   //component\n   function TypePokemon(props){\n     return (\n       //element\n       <li>{props.types}</li>\n     ) \n   }\n   \n   function ShowImg(props){\n     return(\n         <img src={props.user} />\n     )\n   }\n   \n   function Tangkap(){\n     return(\n       <span>ADD</span>\n     )\n   }\n\n  \n\nexport default PokemonDetailPage;","/var/www/html/poke-api/src/components/MyPokemonPage.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":7,"column":10,"nodeType":"53","messageId":"54","endLine":7,"endColumn":18},{"ruleId":"51","severity":1,"message":"56","line":8,"column":24,"nodeType":"53","messageId":"54","endLine":8,"endColumn":27},{"ruleId":"51","severity":1,"message":"57","line":4,"column":10,"nodeType":"53","messageId":"54","endLine":4,"endColumn":31},{"ruleId":"51","severity":1,"message":"58","line":9,"column":20,"nodeType":"53","messageId":"54","endLine":9,"endColumn":29},{"ruleId":"51","severity":1,"message":"59","line":26,"column":12,"nodeType":"53","messageId":"54","endLine":26,"endColumn":19},{"ruleId":"51","severity":1,"message":"60","line":26,"column":21,"nodeType":"53","messageId":"54","endLine":26,"endColumn":26},{"ruleId":"51","severity":1,"message":"61","line":26,"column":34,"nodeType":"53","messageId":"54","endLine":26,"endColumn":43},{"ruleId":"51","severity":1,"message":"59","line":40,"column":12,"nodeType":"53","messageId":"54","endLine":40,"endColumn":19},{"ruleId":"51","severity":1,"message":"60","line":40,"column":21,"nodeType":"53","messageId":"54","endLine":40,"endColumn":26},{"ruleId":"62","severity":1,"message":"63","line":105,"column":10,"nodeType":"64","endLine":105,"endColumn":34},{"ruleId":"51","severity":1,"message":"65","line":109,"column":13,"nodeType":"53","messageId":"54","endLine":109,"endColumn":20},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'gql' is defined but never used.","'offsetLimitPagination' is defined but never used.","'setOffset' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'fetchMore' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Tangkap' is defined but never used.","no-global-assign","no-unsafe-negation"]